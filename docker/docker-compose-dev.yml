name: learning-go

services:

  gateway:
    build:
      context: ../gateway
      dockerfile: Dockerfile
    ports:
      - "${GATEWAY_PORT:-80}:80"
    container_name: gateway-learninggo
    networks:
      - learning-network
    depends_on:
      - service
      # - master-service
      # - activities-service
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_DB_TEST: ${POSTGRES_DB_TEST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_HOST: ${POSTGRES_HOST}
      GATEWAY_PORT: ${GATEWAY_PORT}
      SERVICE_GRPC_PORT: ${SERVICE_GRPC_PORT}
      SERVICE_REST_PORT: ${SERVICE_REST_PORT}
      MASTER_SERVICE_GRPC_PORT: ${MASTER_SERVICE_GRPC_PORT}
      MASTER_SERVICE_REST_PORT: ${MASTER_SERVICE_REST_PORT}
      ACTIVITIES_SERVICE_GRPC_PORT: ${ACTIVITIES_SERVICE_GRPC_PORT}
      ACTIVITIES_SERVICE_REST_PORT: ${ACTIVITIES_SERVICE_REST_PORT}
      JWT_SECRET: ${JWT_SECRET}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB}
      SERVICE_TYPE: main

  service:
    build: 
      context: ../service
      dockerfile: Dockerfile.dev
    container_name: service-learninggo
    networks:
      - learning-network
    ports:
      - "${USERS_SERVICE_GRPC_PORT:-50051}:${USERS_SERVICE_GRPC_PORT:-50051}"
      - "${USERS_SERVICE_REST_PORT:-4001}:${USERS_SERVICE_REST_PORT:-4001}"
    depends_on:
      - postgres
    volumes:
      - ./../service:/app
    env_file:
      - .env

  # master-service:
  #   build: 
  #     context: ../master-service
  #     dockerfile: Dockerfile
  #   container_name: master-service
  #   networks:
  #     - learning-network
  # ports:
  #   - "${MASTER_SERVICE_GRPC_PORT:-50052}:${MASTER_SERVICE_GRPC_PORT:-50052}"
  #   - "${MASTER_SERVICE_REST_PORT:-4002}:${MASTER_SERVICE_REST_PORT:-4002}"
  #   depends_on:
  #     - postgres
  #   volumes:
  #     - ./master-service:/app
  #   environment:
  #     - POSTGRES_HOST=postgres

  # activities-service:
  #   build: 
  #     context: ../activities-service
  #     dockerfile: Dockerfile
  #   container_name: activities-service
  #   networks:
  #     - learning-network
  # ports:
  #   - "${ACTIVITIES_SERVICE_GRPC_PORT:-50053}:${ACTIVITIES_SERVICE_GRPC_PORT:-50053}"
  #   - "${ACTIVITIES_SERVICE_REST_PORT:-4003}:${ACTIVITIES_SERVICE_REST_PORT:-4003}"
  #   environment:
  #     - POSTGRES_HOST=postgres
  #   depends_on:
  #     - postgres
  #   volumes:
  #     - ./activities-service:/app

  postgres:
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secret}
      POSTGRES_DB: ${POSTGRES_DB:-learningdb}
    container_name: postgres-learninggo
    networks:
      - learning-network
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  asynq-client:
    build:
      context: ../service
      dockerfile: Dockerfile.dev
    container_name: client-learninggo
    networks:
      - learning-network
    depends_on:
      - redis
    environment:
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB}
    command: ["go", "run", "./client/main.go"]

  asynq-server:
    build:
      context: ../service
      dockerfile: Dockerfile.dev
    container_name: server-learninggo
    networks:
      - learning-network
    depends_on:
      - redis
    environment:
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB}
    command: ["go", "run", "./worker/server.go"]

  redis:
    image: "redis:alpine"
    container_name: redis-learninggo
    networks:
      - learning-network
    ports:
      - "6379:6379"
    volumes:
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]

  # scheduler:
  #   build:
  #     context: ../service
  #     dockerfile: Dockerfile.dev
  #   networks:
  #     - learning-network
  #   ports:
  #     - "4080:4080"
  #   depends_on:
  #     - postgres
  #   environment:
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #     POSTGRES_DB: ${POSTGRES_DB}
  #     POSTGRES_DB_TEST: ${POSTGRES_DB_TEST}
  #     POSTGRES_PORT: ${POSTGRES_PORT}
  #     POSTGRES_HOST: ${POSTGRES_HOST}
  #     GATEWAY_PORT: ${GATEWAY_PORT}
  #     SERVICE_GRPC_PORT: ${SERVICE_GRPC_PORT}
  #     SERVICE_REST_PORT: ${SERVICE_REST_PORT}
  #     MASTER_SERVICE_GRPC_PORT: ${MASTER_SERVICE_GRPC_PORT}
  #     MASTER_SERVICE_REST_PORT: ${MASTER_SERVICE_REST_PORT}
  #     ACTIVITIES_SERVICE_GRPC_PORT: ${ACTIVITIES_SERVICE_GRPC_PORT}
  #     ACTIVITIES_SERVICE_REST_PORT: ${ACTIVITIES_SERVICE_REST_PORT}
  #     JWT_SECRET: ${JWT_SECRET}
  #     REDIS_HOST: ${REDIS_HOST}
  #     REDIS_PORT: ${REDIS_PORT}
  #     REDIS_PASSWORD: ${REDIS_PASSWORD}
  #     REDIS_DB: ${REDIS_DB}
  #     SERVICE_TYPE: scheduler

  asynq-ui:
    image: "hibiken/asynqmon:latest"
    container_name: asynq-ui-learninggo
    networks:
      - learning-network
    ports:
      - "8080:8080"
    environment:
      REDIS_URL: "redis://redis:6379"
      REDIS_ADDR: "redis:6379"
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB}

volumes:
  postgres-data:

networks:
  learning-network:
    driver: bridge
